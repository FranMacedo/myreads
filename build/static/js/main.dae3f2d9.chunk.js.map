{"version":3,"sources":["BooksAPI.js","Book.js","BookShelf.js","MyBooks.js","SearchBooks.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","Book","handleChange","newShelf","_this","props","changeShelf","_this2","this","title","authors","image","imageLinks","thumbnail","react_default","a","createElement","console","log","className","style","width","height","backgroundImage","defaultValue","onChange","event","target","value","disabled","map","author","index","arr","length","Component","BookShelf","onChangeShelf","changeBookShelf","_this$props","bookShelfTitle","booksInShelf","src_Book","key","MyBooks","src_BookShelf","allBooks","filter","react_router_dom","to","SearchBooks","state","updateQuery","setState","getQueryBooks","searchedBooks","onClick","deleteSearchedBooks","type","placeholder","BooksApp","showSearchPage","changePage","goToSearchPage","checkBookInShelf","searchBook","ourBooks","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","BooksAPI","currenState","b","checkBooksQuery","Array","isArray","queryBooks","trim","booksWithShelf","_this3","react_router","exact","path","render","src_MyBooks","src_SearchBooks","React","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.dae3f2d9.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React, { Component } from \"react\";\r\n\r\nclass Book extends Component {\r\n  handleChange = (newShelf) => {\r\n    this.props.changeShelf(newShelf);\r\n  };\r\n\r\n  render() {\r\n    const book = this.props.book;\r\n    const title = book.title ? book.title : \"\";\r\n    const authors = book.authors ? book.authors : [\"\"];\r\n    const image = book.imageLinks\r\n      ? 'url(\"' + book.imageLinks.thumbnail + '\")'\r\n      : \"\";\r\n    const shelf = book.shelf ? book.shelf : \"none\";\r\n\r\n    return (\r\n      <li>\r\n        {console.log(authors)}\r\n        <div className=\"book\">\r\n          <div className=\"book-top\">\r\n            <div\r\n              className=\"book-cover\"\r\n              style={{\r\n                width: 128,\r\n                height: 193,\r\n                backgroundImage: image,\r\n              }}\r\n            />\r\n            <div className=\"book-shelf-changer\">\r\n              <select\r\n                defaultValue={shelf}\r\n                onChange={(event) => this.handleChange(event.target.value)}\r\n              >\r\n                <option value=\"move\" disabled>\r\n                  Move to...\r\n                </option>\r\n                <option value=\"currentlyReading\">Currently Reading</option>\r\n                <option value=\"wantToRead\">Want to Read</option>\r\n                <option value=\"read\">Read</option>\r\n                <option value=\"none\">none</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"book-title\">{title}</div>\r\n          <div className=\"book-authors\">\r\n            {authors.map((author, index, arr) => {\r\n              return index === arr.length - 1 ? author : author + \", \";\r\n            })}\r\n          </div>\r\n          <div />\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Book;\r\n","import React, { Component } from \"react\";\r\nimport Book from \"./Book\";\r\n\r\nclass BookShelf extends Component {\r\n  onChangeShelf = (book, newShelf) => {\r\n    this.props.changeBookShelf(book, newShelf);\r\n  };\r\n  render() {\r\n    const { bookShelfTitle, booksInShelf } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"bookshelf\">\r\n          <h2 className=\"bookshelf-title\">{bookShelfTitle}</h2>\r\n          <div className=\"bookshelf-books\">\r\n            <ol className=\"books-grid\">\r\n              {booksInShelf.map((book) => (\r\n                <Book\r\n                  key={book.id}\r\n                  book={book}\r\n                  changeShelf={(newShelf) => this.onChangeShelf(book, newShelf)}\r\n                />\r\n              ))}\r\n            </ol>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BookShelf;\r\n","import React, { Component } from \"react\";\r\nimport BookShelf from \"./BookShelf\";\r\nimport { Link } from \"react-router-dom\";\r\nclass MyBooks extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"list-books\">\r\n          <div className=\"list-books-title\">\r\n            <h1>MyReads</h1>\r\n          </div>\r\n          <div className=\"list-books-content\">\r\n            <div>\r\n              <BookShelf\r\n                bookShelfTitle=\"Currently Reading\"\r\n                booksInShelf={this.props.allBooks.filter(\r\n                  (book) => book.shelf === \"currentlyReading\"\r\n                )}\r\n                changeBookShelf={this.props.changeBookShelf}\r\n              />\r\n              <BookShelf\r\n                bookShelfTitle=\"Want to Read\"\r\n                booksInShelf={this.props.allBooks.filter(\r\n                  (book) => book.shelf === \"wantToRead\"\r\n                )}\r\n                changeBookShelf={this.props.changeBookShelf}\r\n              />\r\n              <BookShelf\r\n                bookShelfTitle=\"Read\"\r\n                booksInShelf={this.props.allBooks.filter(\r\n                  (book) => book.shelf === \"read\"\r\n                )}\r\n                changeBookShelf={this.props.changeBookShelf}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"open-search\">\r\n            <Link to=\"/search\" className=\"button-to-search\">\r\n              Add a book\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyBooks;\r\n","import React, { Component } from \"react\";\r\nimport Book from \"./Book\";\r\nimport { Link } from \"react-router-dom\";\r\nclass SearchBooks extends Component {\r\n  state = {\r\n    query: \"\",\r\n  };\r\n\r\n  updateQuery = (query) => {\r\n    this.setState({ query: query });\r\n    query && this.props.getQueryBooks(query);\r\n    this.props.getQueryBooks(query);\r\n  };\r\n\r\n  onChangeShelf = (book, newShelf) => {\r\n    this.props.changeBookShelf(book, newShelf);\r\n  };\r\n\r\n  render() {\r\n    const { searchedBooks } = this.props;\r\n    const query = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"search-books\">\r\n          <div className=\"search-books-bar\">\r\n            <Link\r\n              to=\"/\"\r\n              className=\"close-search\"\r\n              onClick={this.props.deleteSearchedBooks}\r\n            >\r\n              Close\r\n            </Link>\r\n            <div className=\"search-books-input-wrapper\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search by title or author\"\r\n                value={this.state.query}\r\n                onChange={(event) => this.updateQuery(event.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"search-books-results\">\r\n            <ol className=\"books-grid\">\r\n              {searchedBooks && searchedBooks.length !== 0 && query !== \"\"\r\n                ? searchedBooks.map((book) => (\r\n                    <Book\r\n                      book={book}\r\n                      key={book.id}\r\n                      changeShelf={(newShelf) =>\r\n                        this.onChangeShelf(book, newShelf)\r\n                      }\r\n                    />\r\n                  ))\r\n                : \"\"}\r\n            </ol>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBooks;\r\n","import React from \"react\";\r\nimport * as BooksAPI from \"./BooksAPI\";\r\nimport \"./App.css\";\r\nimport MyBooks from \"./MyBooks\";\r\nimport SearchBooks from \"./SearchBooks\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nclass BooksApp extends React.Component {\r\n  state = {\r\n    /**\r\n     * TODO: Instead of using this state variable to keep track of which page\r\n     * we're on, use the URL in the browser's address bar. This will ensure that\r\n     * users can use the browser's back and forward buttons to navigate between\r\n     * pages, as well as provide a good URL they can bookmark and share.\r\n     */\r\n    books: [],\r\n    searchedBooks: [],\r\n    showSearchPage: false,\r\n  };\r\n  changePage = (goToSearchPage) => {\r\n    this.setState({ showSearchPage: goToSearchPage });\r\n  };\r\n\r\n  componentDidMount() {\r\n    BooksAPI.getAll().then((books) => {\r\n      this.setState(() => ({\r\n        books,\r\n      }));\r\n    });\r\n  }\r\n\r\n  checkBookInShelf = (searchBook) => {\r\n    const ourBooks = this.state.books;\r\n\r\n    for (let book of ourBooks) {\r\n      if (searchBook.id === book.id) {\r\n        return [true, book];\r\n      }\r\n    }\r\n\r\n    return [false, searchBook];\r\n  };\r\n\r\n  changeBookShelf = (book, newShelf) => {\r\n    BooksAPI.update(book, newShelf).then(() => {\r\n      book.shelf = newShelf;\r\n      this.checkBookInShelf(book)[0]\r\n        ? this.setState((currenState) => ({\r\n            books: currenState.books.filter((b) => {\r\n              b.id === book.id && (b.shelf = newShelf);\r\n              return b;\r\n            }),\r\n          }))\r\n        : this.setState((currenState) => ({\r\n            books: currenState.books.concat([book]),\r\n          }));\r\n    });\r\n  };\r\n\r\n  checkBooksQuery = (books) => {\r\n    return !books // if it is undefined, no books available\r\n      ? []\r\n      : Array.isArray(books) // if it is an array, some books available!\r\n      ? books\r\n      : \"error\" in books // if it's not an array, it's an object and can be error message or maybe just one book?\r\n      ? [] // if is error, no book is stored in state\r\n      : [books]; //otherwise, it's just a lonely book\r\n  };\r\n\r\n  queryBooks = (query) => {\r\n    query.trim() // only query API if any search in string\r\n      ? BooksAPI.search(query).then((books) => {\r\n          const searchedBooks = this.checkBooksQuery(books);\r\n          const booksWithShelf = searchedBooks.map(\r\n            (searchBook) => this.checkBookInShelf(searchBook)[1]\r\n          );\r\n          this.setState({\r\n            searchedBooks: booksWithShelf,\r\n          });\r\n        })\r\n      : this.setState({ searchedBooks: [] });\r\n  };\r\n  deleteSearchedBooks = () => {\r\n    this.setState({ searchedBooks: [] });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={() => (\r\n            <MyBooks\r\n              allBooks={this.state.books}\r\n              changeBookShelf={this.changeBookShelf}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/search\"\r\n          render={() => (\r\n            <SearchBooks\r\n              getQueryBooks={this.queryBooks}\r\n              searchedBooks={this.state.searchedBooks}\r\n              changeBookShelf={this.changeBookShelf}\r\n              deleteSearchedBooks={this.deleteSearchedBooks}\r\n            />\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BooksApp;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}